function NodeLength(in node: NodeP) -> integer
algoritma
    if node.next == NIL then
        return 1
    else
        return 1+NodeLength(node.next)
    endif
endfunction

procedure InitNode(in/out node: Node, out test,x:real)
konstanta
kamus
    a,b,c:pointer to pointer to integer
algoritma
    node.next <- NIL
    node.data <- node.func(0,1)-asd/123^(123-foo(bar)^baz)
endprocedure

type NodeP: pointer to Node

type Text<
    a : real
>

program coba_increment_depan
konstanta
    maks : integer = 3
    hey: real = -2.312
    b: bool = true
kamus
    r,s : integer
    x:real
algoritma
    r <- 10
    s <- 10 + r
    r <- r + 1
    output (r,s)
    if (r>=10) then
        r <- r div 2
    else if (r>=15) then
        r <- 7
    else
        r <- s
    endif
    s<-0
    while (s<r) do
        s <- s+1
        output(s)
    endwhile
endprogram
